<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
  	<groupId>org.phoebus</groupId>
  	<artifactId>parent</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>scan-server-product</artifactId>
  <dependencies>
    <dependency>
      <groupId>org.phoebus</groupId>
      <artifactId>scan-server</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib</classpathPrefix>
              <mainClass>org.csstudio.scan.server.ScanServerInstance</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      
      <!-- Above commands built the product.jar.
           Need to list all lib/* jars in the manifest classpath
           (this adds for example the caj and pvaccess.jar
            that's in lib/, but not added by maven-jar-plugin
            to manifest because it's a system scope)
        -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>verify</phase>
            <configuration>
              <failOnError>true</failOnError>
              <tasks>
                <echo message="Adding dependencies to product"/>
                <manifestclasspath property="manifest-classpath"
                                   jarfile="${project.build.directory}/scan-server-product-${project.version}.jar">
                  <classpath>
                    <path>
                      <fileset dir="${project.build.directory}/lib">
                        <include name="*.jar"/>
                      </fileset>
                    </path>
                  </classpath>
                </manifestclasspath>
            
                <!--
                 -->
                 <echo message="Manifest classpath: ${manifest-classpath}"/> 

                <jar update="true" destfile="${project.build.directory}/scan-server-product-${project.version}.jar">
                  <manifest>
                    <attribute name="Class-Path" value="${manifest-classpath}" />
                  </manifest>
                </jar>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
