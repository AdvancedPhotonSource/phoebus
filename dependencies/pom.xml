<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.phoebus</groupId>
  <artifactId>dependencies</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <profiles>
    <!-- Oracle JDBC is only available from an Oracle maven repo
         which requires registration, user, password
         ( https://blogs.oracle.com/dev2dev/get-oracle-jdbc-drivers-and-ucp-from-oracle-maven-repository-without-ides )
         
         Since only few sites need Oracle support,
         have them set environment variable
         ORACLE_JDBC_JAR=/path/to/ojdbc8-12.2.0.1.jar 
      -->
    <profile>
      <activation>
        <property><name>env.ORACLE_JDBC_JAR</name></property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.oracle.jdbc</groupId>
          <artifactId>ojdbc8</artifactId>
          <version>12.2.0.1</version>
          <scope>system</scope>
          <systemPath>${env.ORACLE_JDBC_JAR}</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <dependencies>
    <!-- For testing.
         mockito-all contains hamcrest packages,
         resulting in conflicts.
         This combination of junit, mockito, hamcrest seems to work
      -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.epics</groupId>
      <artifactId>jca</artifactId>
      <version>2.4.1</version>
    </dependency>
    <dependency>
      <groupId>org.epics</groupId>
      <artifactId>epics-pvdata</artifactId>
      <version>6.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.epics</groupId>
      <artifactId>epics-pvaccess</artifactId>
      <version>5.1.1</version>
    </dependency>

    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.python</groupId>
      <artifactId>jython-standalone</artifactId>
      <version>2.7.1</version>
    </dependency>
    <dependency>
      <groupId>net.sf.py4j</groupId>
      <artifactId>py4j</artifactId>
      <version>0.10.2.1</version>
    </dependency>
    <!-- JDBC connectors
         For Oracle, see ORACLE_JDBC_JAR
      -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.45</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.1.4</version>
    </dependency>
    <!-- For data browser to export Matlab files -->
    <dependency>
      <groupId>org.tallison</groupId>
      <artifactId>jmatio</artifactId>
      <version>1.2</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
